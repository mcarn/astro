---
import type { HTMLAttributes } from 'astro/types';
import { Image } from 'astro:assets';
import getReadingTime from 'reading-time';
import FormattedDate from './FormattedDate.astro';
import Icon from './Icon.astro';
import TagList from './TagList.astro';
import settings from '../settings.js';
import type { Article } from '../content/config.js';

interface Props extends HTMLAttributes<'header'> {
	article: Article;
}

const { article, ...attrs } = Astro.props;

const { text: readingTime } = await getReadingTime(article.body);
---

<header {...attrs}>
	<div class="cover">
		{
			article.data.cover && (
				<Image src={article.data.cover.src} alt={article.data.cover.alt} class="u-photo" />
			)
		}

		<div class="p-author h-card">
			<Image src={settings.avatar.src} alt={settings.avatar.alt} width={80} class="u-photo" />
			<p class="p-name">{settings.name}</p>
			<p class="p-nickname">{settings.username}</p>
		</div>
	</div>

	<div class="meta">
		<FormattedDate date={article.data.pubDate} class="dt-published" />
		<span>â€¢</span>
		<p>
			<Icon icon="clock" size="1rem" />
			<span>{readingTime}</span>
		</p>
	</div>

	<h1 class="p-name">{article.data.title}</h1>

	{article.data.categories?.length > 0 && <TagList tags={article.data.categories} />}
</header>

<style>
	header {
		display: flex;
		flex-direction: column;
		gap: var(--theme-space-sm);
	}

	.cover {
		display: grid;
		width: 100%;
		min-height: 150px;
		background: var(--theme-gradient-main);
		border-radius: var(--theme-radius-xl);
		margin-block-end: var(--theme-space-md);
	}

	.cover > img {
		grid-column: 1;
		grid-row: 1;
		width: 100%;
		min-height: inherit;
		height: 100%;
		aspect-ratio: 2.777;
		object-fit: cover;
		border-radius: inherit;
	}

	.p-author {
		grid-column: 1;
		grid-row: 1;
		display: flex;
		align-items: center;
		gap: var(--theme-space-2xs);
		width: fit-content;
		height: fit-content;
		align-self: end;
		justify-self: center;
		transform: translateY(50%);
		box-shadow: var(--theme-shadow-md);
		background-color: var(--theme-accent-light);
		padding: var(--theme-space-3xs) var(--theme-space-md);
		border-radius: var(--theme-radius-xl);
		border: 3px solid var(--theme-accent-dark);
	}

	@media (min-width: 640px) {
		.cover {
		margin-block-end: var(--theme-space-sm);
		}

		.p-author {
			justify-self: end;
			margin-inline-end: var(--theme-space-xl);
		}
	}

	.p-author img {
		width: var(--theme-space-lg);
		height: var(--theme-space-lg);
	}

	.p-author .p-name {
		font-family: var(--font-brand);
		font-weight: bold;
	}

	.p-author .p-nickname {
		color: var(--theme-gray-300);
		font-size: var(--theme-text-sm);
		font-weight: 600;
	}

	.meta {
		display: flex;
		align-items: center;
		gap: 1rem;
		font-size: var(--theme-text-sm);
		color: var(--theme-gray-200);
	}

	.meta svg {
		margin-block-end: var(--theme-space-3xs);
	}
</style>
