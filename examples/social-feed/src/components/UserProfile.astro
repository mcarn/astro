---
import { Image } from 'astro:assets';
import settings from '../settings';
import Icon from './Icon.astro';

const socialLinks = Object.entries(settings.social);
---

<div class="h-card">
	<div>
		<div class="u-photo">
			<Image {...settings.avatar} width={220} />
		</div>
		<h1>
			<span class="p-name">{settings.name}</span>
			<small class="p-nickname">{settings.username}</small>
		</h1>
	</div>
	<div class="bio-sections">
		<div class="bio">
			<p>ðŸš€ <a href="https://astro.build/">Astro</a> Mascot</p>
			<p>ðŸ˜Š The cutest</p>
			<p>ðŸŽ¨ Whimsical Speedy Web</p>
		</div>
		<div class="bio">
			{
				settings.pronouns && (
					<p>
						<Icon icon="user" color="var(--theme-accent-dark)" size="1.75rem" />
						<span class="sr-only">Pronouns</span>
						{settings.pronouns}
					</p>
				)
			}
			{
				settings.location && (
					<p>
						<Icon icon="location-point" color="var(--theme-accent-dark)" size="1.75rem" />
						<span class="sr-only">Location</span>
						<span class="p-locality">{settings.location}</span>
					</p>
				)
			}
			{
				settings.homepage && (
					<p>
						<Icon icon="link-h" color="var(--theme-accent-dark)" size="1.75rem" />
						<span class="sr-only">Homepage</span>
						<a href={settings.homepage} class="u-url">{settings.homepage.replace(/^https?:\/\/(www\.)?/, '')}</a>
					</p>
				)
			}
			<p>
				<Icon icon="rss-alt" color="var(--theme-accent-dark)" size="1.75rem" />
				<a href="/rss.xml">RSS Feed</a>
			</p>
		</div>
		<ul class="social">
			{
				socialLinks.map(([key, { url, title }]) => (
					<li>
						<a href={url} rel="me">
							<span class="sr-only">{title}</span>
							<Icon icon={`${key}`} size="1.75rem" />
						</a>
					</li>
				))
			}
		</ul>
	</div>
</div>

<style>
	.h-card {
		display: flex;
		flex-direction: column;
		gap: var(--theme-space-md);
	}

	.u-photo {
		display: inline-block;
		position: relative;
	}

	.u-photo::after {
		border-radius: var(--theme-radius-full);
		position: absolute;
		content: '';
		inset: 0;
		border: 3px solid var(--theme-text);
	}

	.u-photo img {
		width: 110px;
		height: 110px;
	}

	h1 {
		display: flex;
		flex-direction: column;
		font-size: var(--theme-text-xl);
	}

	small {
		font-size: var(--theme-text-base);
		font-family: var(--theme-font-body);
		color: var(--theme-gray-200);
	}

	.bio-sections {
		display: grid;
		grid-template-columns: 1fr;
		align-items: flex-start;
		gap: var(--theme-space-sm) var(--theme-space-md);
	}

	.bio-sections > :nth-child(2) {
		grid-row: span 2;
	}

	.bio {
		font-size: var(--theme-text-sm);
		font-weight: 500;
	}

	.bio > * + * {
		margin-top: var(--theme-space-xs);
	}

	.bio :global(svg) {
		/* Slightly hacky way to avoid the icon height being included in the box calculation. */
		margin: -50% 0;
	}

	.social {
		display: flex;
		flex-wrap: wrap;
		gap: var(--theme-space-3xs);
		list-style: none;
		padding: 0;
		grid-row: 2;
	}

	.social a {
		color: var(--theme-accent-dark);
	}

	@media (min-width: 35em) {
		.bio-sections {
			grid-template-columns: 1fr 1fr;
		}

		.social {
			grid-row: unset;
		}
	}

	@media (min-width: 50em) {
		.bio-sections {
			display: flex;
			flex-direction: column;
		}
	}
</style>
